[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"


[project]
name="pypsa"
dynamic = ["version"]
description="Python for Power Systems Analysis"
readme="README.md"
authors=[{name = "PyPSA Developers, see https://pypsa.readthedocs.io/en/latest/developers.html", email = "t.brown@tu-berlin.de"}]
license = { file = "LICENSE" }
classifiers=[
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
]

requires-python = ">=3.9"

dependencies = [
    "numpy",
    "scipy",
    "pandas>=0.24",
    "xarray",
    "netcdf4",
    "tables",
    "linopy>=0.3.9",
    "matplotlib",
    "geopandas>=0.9",
    "networkx>=2",
    "deprecation",
    "validators",
    "highspy",
]

[project.urls]
Homepage = "https://github.com/PyPSA/PyPSA"
Source = "https://github.com/PyPSA/PyPSA"

[project.optional-dependencies]
dev = [
    "pytest", 
    "pypower",
    "pandapower",
    "scikit-learn",
    "pre-commit", 
    "ruff"
]
cartopy = ["cartopy>=0.16"]
docs = [
    "numpydoc",
    "sphinx",
    "sphinx-book-theme",
    "nbsphinx",
    "nbsphinx-link",
    "scikit-learn",
    "docutils==0.20.0", # Just temporarily until sphinx-docutils is updated (see https://github.com/sphinx-doc/sphinx/issues/12340)
]
gurobipy = ["gurobipy"]

[tool.setuptools_scm]

[tool.setuptools.packages.find]
include = ["pypsa"]

# Pytest settings

[tool.pytest.ini_options]
filterwarnings = [
    "error::DeprecationWarning", # Raise all DeprecationWarnings as errors
    "error::FutureWarning",      # Raise all FutureWarnings as errors
    # Ignore https://github.com/pydata/xarray/issues/6505 (occurs via linopy)
    # When https://github.com/PyPSA/linopy/issues/303 is fixed, this can be removed
    "ignore:Deleting a single level of a MultiIndex is deprecated:DeprecationWarning",
]

# Formater and linter settings

[tool.black]
line-length = 88

[tool.ruff]
line-length = 88
extend-include = ['*.ipynb']

[tool.ruff.lint]
select = [
    'F',   # pyflakes
    'E',   # pycodestyle: Error
    'W',   # pycodestyle: Warning
    'I',   # isort
    'D',   # pydocstyle
    'UP',  # pyupgrade
    'TID', # flake8-tidy-imports
    'NPY', # numpy
]

ignore = [
    'E501', # line too long
    'E741', # ambiguous variable names
    'D105', # Missing docstring in magic method
    'D212', # Multi-line docstring summary should start at the second line
    'D200', # One-line docstring should fit on one line with quotes
    'D401', # First line should be in imperative mood
    'D404', # First word of the docstring should not be "This
    'D413', # Missing blank line after last section

    # pydocstyle ignores, which could be enabled in future when existing
    # issues are fixed
    'D100', # Missing docstring in public module
    'D101', # Missing docstring in public class
    'D102', # Missing docstring in public method
    'D103', # Missing docstring in public function
    'D107', # Missing docstring in __init__
    'D202', # No blank lines allowed after function docstring
    'D203', # 1 blank line required before class docstring
    'D205', # 1 blank line required between summary line and description
    'D400', # First line should end with a period
    'D415', # First line should end with a period, question mark, or exclamation point
    'D417', # Missing argument descriptions in the docstring

]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"
