attribute,type,unit,default,description,status
name,string,n/a,n/a,Unique name,Input (required)
now,any,n/a,"""now""","The current snapshot/time/scenario, relevant e.g. when ``network.pf()`` is called without a snapshot argument.",Input (optional)
pypsa_version,string,n/a,n/a,Fetched from __version__ variable in package __init__.py.  Will be dot-separated integers only.,Output
srid,integer,n/a,4326,"Spatial Reference System Indentifier for x,y coordinates of buses. It defaults to standard longitude and latitude.",Input (optional)
snapshots,list or pandas.Index,n/a,"[""now""]","List of snapshots or time steps. All time-dependent series quantities are indexed by ``network.snapshots``. To reset the snapshots, call ``network.set_snapshots(new)``.",Input (optional)
snapshot_weightings,pandas.DataFrame, hours ,1,"The weightings applied to each snapshot, so that snapshots can represent more than one hour or fractions of one hour. The objective weightings are used to weight snapshots in the LOPF objective function. The store weightings determine the state of charge change for stores and storage units. The generator weightings are used when calculating global constraints.",Input (optional)
investment_periods,pandas.Index,years,[],"Time periods of investment. Only used for multi investment optimisation. Years have to be integer and increasing (e.g. [2025,2030,2035]). Default is an empty pd.Index([]).",Input (optional)
investment_period_weightings,pandas.DataFrame,n/a,1,Weightings applied to each investment period. Objective weightings are multiplied with all cost coefficients in the objective function of the respective investment period (e.g. used to include social discount rate). Years weighting denote the elapsed time until the subsequent investment period (e.g. used for global constraints CO2 emissions).,Input (optional)
all_components,set (of Components),n/a,n/a,"A set retrieved from the string values in col=0 of the components.csv file.  Note that ""Network"" itself is not considered a Component and will be excluded from this set, if present as a row in components.csv.",Output
{type}_components,set (of Components),n/a,n/a,"Some of the Component classes are assigned a ""type"" attribute (via the components.csv file).  Upon instantiating a Network class object, PyPSA forms Python sets from each such ""type"" string identified and assigns this set to an attribute constructed from {type}_components.  The type values present in the default csv are: passive_branch, standard_type, controllable_branch, controllable_one_port, and passive_one_port.",Output
one_port_components,set (of Components),n/a,n/a,Union of ``passive_one_port_components`` and ``controllable_one_port_components`` (as per previous construction),Output
branch_components,set (of Components),n/a,n/a,Union of ``passive_branch_components`` and ``controllable_branch_components`` (as per previous construction),Output
{list_name},pandas.DataFrame,n/a,n/a,"All data for static attributes, i.e. not indicated as ""series"" type in relevant csv in the ``component_attrs`` sub-directory.  These data are compiled by PyPSA from inputs for all devices indicated by ""list_name"".  Index are the unique device ""names""; columns are all static attributes.",Output
{list_name}_t,dictionary of pandas.DataFrames,n/a,n/a,"For each class of components, all time-varying attributes, i.e. indicated as ""series"" OR ""static or series"" in component_attrs csv, are stored in a dictionary of DataFrames.  There is a dictionary key for each time-varying attribute.  These keys retrieve a DataFrame where index is Network.snapshots and columns are unique ""names"" for each defined device in the component class.",Output
components,dictionary,n/a,n/a,A complex dictionary holding the schema data for each Component class.  Keys are the Component label.  (See notes below this table for more detailed specification.),Output
controllable_branches,,pandas.DataFrame,n/a,PENDING.  These are set by a controllable_branches setter method I haven't worked through yet to understand context of usage.,
passive_branches,,pandas.DataFrame,n/a,PENDING.  These are set by a passive_branches setter method I haven't worked through yet to understand context of usage.,
